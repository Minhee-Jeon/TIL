/* 1. 타입 별칭 VS 인터페이스 */
type Poet = {
    born: number
    name: string
}
interface Poet_ {
    born: number
    name: string
}

// 할당 가능성 검사와 오류메시지는 거의 동일하다.
// [** 차이점 **]
// - 인터페이스는 속성 증가를 위한 병합(merge)를 할 수 있다.
//   -> 내장된 전역 인터페이스 or 외부 코드(ex. npm 패키지)를 사용할 때 유용하다.
// - 인터페이스는 클래스가 선언된 구조의 타입을 확인하는 데 쓸 수 있지만 타입 별칭 사용 불가
// - 일반적으로 인터페이스에서 TS 타입 검사가 빠르다. <- 내부적으로 더 쉽게 캐시 가능
// - 인터페이스의 오류 메시지가 더 쉽다. <- 객체 리터럴의 별칭이 아닌 명명된 객체로 간주됨
